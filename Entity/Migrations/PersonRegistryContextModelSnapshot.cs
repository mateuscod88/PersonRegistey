// <auto-generated />
using System;
using Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entity.Migrations
{
    [DbContext(typeof(PersonRegistryContext))]
    partial class PersonRegistryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Entities.Family", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildID");

                    b.Property<int?>("ParentID");

                    b.HasKey("ID");

                    b.HasIndex("ChildID");

                    b.HasIndex("ParentID");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Entity.Entities.Marriage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FirstPartnerID");

                    b.Property<int?>("SecondPartnerID");

                    b.HasKey("ID");

                    b.HasIndex("FirstPartnerID");

                    b.HasIndex("SecondPartnerID");

                    b.ToTable("Marriages");
                });

            modelBuilder.Entity("Entity.Entities.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Entity.Entities.PersonRegister", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonID");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonRegisters");
                });

            modelBuilder.Entity("Entity.Entities.Family", b =>
                {
                    b.HasOne("Entity.Entities.Person", "Child")
                        .WithMany()
                        .HasForeignKey("ChildID");

                    b.HasOne("Entity.Entities.Person", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("Entity.Entities.Marriage", b =>
                {
                    b.HasOne("Entity.Entities.Person", "FirstPartner")
                        .WithMany()
                        .HasForeignKey("FirstPartnerID");

                    b.HasOne("Entity.Entities.Person", "SecondPartner")
                        .WithMany()
                        .HasForeignKey("SecondPartnerID");
                });

            modelBuilder.Entity("Entity.Entities.PersonRegister", b =>
                {
                    b.HasOne("Entity.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");
                });
#pragma warning restore 612, 618
        }
    }
}
